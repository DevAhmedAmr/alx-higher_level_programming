>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided("string", 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("string", "3")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided(0, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided(0, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix =[[5,9,4,5,8,4,5,4,2,54,2,5,4,25,4,2,4,1,5],[7,9,8,5,6,4,5,4,2,4,7,5,4,4,4,2,4,1,5]]

>>> matrix_divided(matrix, 1)
[[5.0, 9.0, 4.0, 5.0, 8.0, 4.0, 5.0, 4.0, 2.0, 54.0, 2.0, 5.0, 4.0, 25.0, 4.0, 2.0, 4.0, 1.0, 5.0], [7.0, 9.0, 8.0, 5.0, 6.0, 4.0, 5.0, 4.0, 2.0, 4.0, 7.0, 5.0, 4.0, 4.0, 4.0, 2.0, 4.0, 1.0, 5.0]]

>>> matrix = [[1, 2, 3],[4, 5, 6]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> print(matrix_divided(matrix, 'hello'))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> print(matrix_divided(matrix, 9.99))
[[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]

>>> print(matrix_divided(matrix, 'a'))
Traceback (most recent call last):
...
TypeError: div must be a number
